@model Le6pergram.Models.ViewModels.PictureDetailsViewModel

@{
    ViewBag.Title = Model.User.Username + "'s picture";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Site.css" rel="stylesheet" type="text/css"/>
@{var loggedUser = AuthManager.GetAuthenticated();}
<div>
    <div class="row" style="margin-top:50px">
        <div class="col-sm-6" style="text-align: center">
            <img id="pictureDetails" src="data:image;base64,@System.Convert.ToBase64String(Model.Content)" />
            <h4><i>@Html.DisplayFor(model => model.Description)</i></h4>
            @foreach (var tag in Model.Tags.ToList())
            {
                <a href="../../Tags/Details/@tag.Id">#@tag.Name </a>
            }
            @if (loggedUser != null)
            {
                if (!Model.Likes.Any(l => l.Id == loggedUser.Id))
                {
                    <h5>@Html.ActionLink("Like", "Like", "Pictures", new { id = Model.Id, loggedId = loggedUser.Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })</h5>
                }
                else
                {
                    <h5>@Html.ActionLink("Unlike", "Unlike", "Pictures", new { id = Model.Id, loggedId = loggedUser.Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })</h5>
                }
            }


            @if (Model.Likes.Count != 1)
            {
                <h5><a data-toggle="modal" class="link" data-target="#myModal">@Html.DisplayFor(model => model.Likes.Count) people</a> like this picture</h5>
            }
            else
            {
                <h5><a data-toggle="modal" class="link" data-target="#myModal">@Html.DisplayFor(model => model.Likes.Count) person</a> likes this picture</h5>
            }
            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog" style="overflow-y: initial !important">
                    
                    <div class="modal-content">                       
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Likes</h4>
                            </div>                        
                        <div class="modal-body" style="height: 500px; overflow-y:auto">
                            @if (Model.Likes.Count != 0)
                            {
                                foreach (var like in Model.Likes)
                                {
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <img onclick="location.href='../../Users/Details/' + @like.Id"  src="data:image;base64,@System.Convert.ToBase64String(like.RegisterProfilePicture)" class="img-circle" width="50" height="50" />
                                        </div>
                                        <div class="col-sm-3">
                                            <br />
                                            @Html.ActionLink(like.Username, "Details/" + like.Id, "Users", new { @class = "link"})
                                        </div>
                                        <div class="col-sm-6">
                                            @if (loggedUser != null)
                                            {
                                                if (loggedUser.Id != like.Id && !like.Followers.Any(u => u.Id == loggedUser.Id))
                                                {
                                                    <div class="container col-md-4">
                                                        @Html.ActionLink("Follow", "Follow", "Users", new { id = like.Id, loggedId = loggedUser.Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })
                                                    </div>
                                                }
                                                else if (loggedUser.Id != like.Id && like.Followers.Any(u => u.Id == loggedUser.Id))
                                                {
                                                    <div class="container col-md-4">
                                                        @Html.ActionLink("Unfollow", "Unfollow", "Users", new { id = like.Id, loggedId = loggedUser.Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="col-sm-12">
                <div class="col-sm-2">
                    <img onclick="location.href='../../Users/Details/' + @Model.UserId"  src="data:image;base64,@System.Convert.ToBase64String(Model.User.RegisterProfilePicture)" class="img-circle" width="50" height="50" />
                </div>
                <div class="col-sm-2">
                    @Html.ActionLink(Model.User.Username, "Details/" + Model.UserId, "Users")
                </div>
                    @if (loggedUser != null && loggedUser.Id == Model.UserId)
                    {
                        <h5 class="col-sm-5">@Html.ActionLink("Delete picture", "Delete", "Pictures", new { id = Model.Id, loggedId = loggedUser.Id }, new { @class = "btn btn-default", id = "deletePictureBtn", style = "margin-top: 22px" })</h5>
                    }                
                <div class="col-sm-12 commentSection">
                    <br />
                    @foreach (var comment in Model.Comments.ToList())
                    {
                        if (loggedUser != null && comment.UserId == loggedUser.Id || (loggedUser != null && loggedUser.Id == Model.UserId ))
                        {
                            <form method="post">
                                <button type="submit" class="close" formaction="../../Comments/DeleteComment" id="deleteCommentSubmit">&times;</button>
                                <input type="text" name="currentCommentID" style="display: none;" value="@comment.Id" />
                                <input type="text" name="CurrentPictureID" style="display: none;" value="@Model.Id" />
                            </form>
                        }
                        <div class="commentText"><span>@Html.ActionLink(comment.User.Username, "Details/" + comment.UserId, "Users", new { @class = "link" })</span> @comment.Content</div>
                        <hr />
                    }
                </div>
                <div class="col-sm-12">
                    @if (loggedUser != null)
                    {
                        <form method="post" class="form-inline">
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NewComment, new { htmlAttributes = new { @class = "form-control", name = "NewComment" } })
                                </div>
                            </div>
                            <div><input type="text" value="@Model.Id" style="display:none;" name="currentID" /></div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" class="btn btn-default" formaction="../../Comments/AddComment" id="addCommentSubmit">
                                        <i>Add comment</i>
                                    </button>
                                </div>
                            </div>
                        </form>
                    }                    
                </div>
            </div>
            <div class="col-sm-3">
            </div>
        </div>
    </div>
</div>
<p>   
</p>

<script src="~/Scripts/jquery-3.1.1.js"></script>
<script>$('#addCommentSubmit').click(function () { $(document).ready(function () { $('#addCommentSubmit').attr("disabled", true); }) }) 
    $('#deleteCommentSubmit').click(function () { $(document).ready(function () { $('#deleteCommentSubmit').attr("disabled", true); }) })</script> 


