@model Le6pergram.Web.Models.Picture

@{
    ViewBag.Title = Model.User.Username + "'s picture";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<div>
    <div class="row" style="margin-top:50px">
        <div class="col-sm-6" style="text-align: center">
            <img id="pictureDetails" src="data:image;base64,@System.Convert.ToBase64String(Model.Content)" />
            <h4><i>@Html.DisplayFor(model => model.Description)</i></h4>
            @foreach (var tag in Model.Tags.ToList())
            {
                <a href="../../Tags/Details/@tag.Id">#@tag.Name </a>
            }
            @if (!Model.Likes.Any(l => l.Id == AuthManager.GetAuthenticated().Id))
            {
                <h5>@Html.ActionLink("Like", "Like", "Pictures", new { id = Model.Id, loggedId = AuthManager.GetAuthenticated().Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })</h5>
            }
            else
            {
                <h5>@Html.ActionLink("Unlike", "Unlike", "Pictures", new { id = Model.Id, loggedId = AuthManager.GetAuthenticated().Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })</h5>
            }
            <h5><a data-toggle="modal" data-target="#myModal">@Html.DisplayFor(model => model.Likes.Count) people</a> liked this picture</h5>
            <!-- Modal -->
            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Likes</h4>
                        </div>
                        <div class="modal-body">
                            @if (Model.Likes.Count != 0)
                            {
                                foreach (var like in Model.Likes)
                                {
                                    <div class="row">
                                        <div class="col-sm-3">
                                            @if (like.RegisterProfilePicture != null)
                                            {
                                                <img src="data:image;base64,@System.Convert.ToBase64String(like.RegisterProfilePicture)" class="img-circle" width="50" height="50" />
                                            }
                                        </div>
                                        <div class="col-sm-3">
                                            <br />
                                            @Html.ActionLink(like.Username, "Details/" + like.Id, "Users")
                                        </div>
                                        <div class="col-sm-6">
                                            @{var loggedUser = AuthManager.GetAuthenticated();}
                                            @if (loggedUser != null)
                                            {
                                                if (loggedUser.Id != like.Id && !like.Followers.Any(u => u.Id == loggedUser.Id))
                                                {
                                                    <div class="container col-md-4">
                                                        @Html.ActionLink("Follow", "Follow", "Users", new { id = like.Id, loggedId = AuthManager.GetAuthenticated().Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })
                                                    </div>
                                                }
                                                else if (loggedUser.Id != like.Id && like.Followers.Any(u => u.Id == loggedUser.Id))
                                                {
                                                    <div class="container col-md-4">
                                                        @Html.ActionLink("Unfollow", "Unfollow", "Users", new { id = like.Id, loggedId = AuthManager.GetAuthenticated().Id }, new { @class = "btn btn-default", style = "margin-top: 22px" })
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                                    }
                                                }

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="col-sm-12">
                <div class="col-sm-6">
                    Username
                    @Html.ActionLink(Model.User.Username, "Details/" + Model.UserId, "Users")
                </div>
                @if (Model.User.RegisterProfilePicture != null)
                {
                    <div class="col-sm-6">
                        <img src="data:image;base64,@System.Convert.ToBase64String(Model.User.RegisterProfilePicture)" class="img-circle" width="50" height="50" />
                    </div>
                }

            </div>
            <div class="col-sm-6">
                <br />
                @foreach (var comment in Model.Comments.ToList())
                {
                    <div class="col-sm-3">@Html.ActionLink(Model.User.Username, "Details/" + Model.UserId, "Users")</div>
                    <div class="col-sm-9">@comment</div>
                }
            </div>
            <div class="col-sm-12">
                <div class="form-group">
                    <input type="text" placeholder="Add Comment" name="addComment" class="form-control" />
                </div>
                <button type="submit" class="btn btn-default" id="addCommentId" formaction="">
                    <i>Add comment</i>
                </button>
            </div>
        </div>

        <div class="col-sm-3">
        </div>

    </div>
</div>
<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index")*@
</p>
